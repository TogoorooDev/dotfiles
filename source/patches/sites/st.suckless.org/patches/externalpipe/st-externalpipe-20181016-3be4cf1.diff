From c19e14bef38548e3984a0135f6466f77d56b8d77 Mon Sep 17 00:00:00 2001
From: Parker Ellertson <parkerellertson@airmail.cc>
Date: Tue, 16 Oct 2018 12:27:29 -0600
Subject: [PATCH] Applied externalpipe patch to current git version.

---
 st.c | 53 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 st.h |  1 +
 2 files changed, 54 insertions(+)

diff --git a/st.c b/st.c
index 46cf2da..2a34f83 100644
--- a/st.c
+++ b/st.c
@@ -1978,6 +1978,59 @@ tprinter(char *s, size_t len)
 	}
 }
 
+void
+externalpipe(const Arg *arg)
+{
+	int to[2];
+	char buf[UTF_SIZ];
+	void (*oldsigpipe)(int);
+	Glyph *bp, *end;
+	int lastpos, n, newline;
+
+	if (pipe(to) == -1)
+		return;
+
+	switch (fork()) {
+	case -1:
+		close(to[0]);
+		close(to[1]);
+		return;
+	case 0:
+		dup2(to[0], STDIN_FILENO);
+		close(to[0]);
+		close(to[1]);
+		execvp(((char **)arg->v)[0], (char **)arg->v);
+		fprintf(stderr, "st: execvp %s\n", ((char **)arg->v)[0]);
+		perror("failed");
+		exit(0);
+	}
+
+	close(to[0]);
+	/* ignore sigpipe for now, in case child exists early */
+	oldsigpipe = signal(SIGPIPE, SIG_IGN);
+	newline = 0;
+	for (n = 0; n < term.row; n++) {
+		bp = term.line[n];
+		lastpos = MIN(tlinelen(n) + 1, term.col) - 1;
+		if (lastpos < 0)
+			break;
+		end = &bp[lastpos + 1];
+		for (; bp < end; ++bp)
+			if (xwrite(to[1], buf, utf8encode(bp->u, buf)) < 0)
+				break;
+		if ((newline = term.line[n][lastpos].mode & ATTR_WRAP))
+			continue;
+		if (xwrite(to[1], "\n", 1) < 0)
+			break;
+		newline = 0;
+	}
+	if (newline)
+		(void)xwrite(to[1], "\n", 1);
+	close(to[1]);
+	/* restore */
+	signal(SIGPIPE, oldsigpipe);
+}
+
 void
 toggleprinter(const Arg *arg)
 {
diff --git a/st.h b/st.h
index 38c61c4..fe56f49 100644
--- a/st.h
+++ b/st.h
@@ -83,6 +83,7 @@ void draw(void);
 void printscreen(const Arg *);
 void printsel(const Arg *);
 void sendbreak(const Arg *);
+void externalpipe(const Arg *);
 void toggleprinter(const Arg *);
 
 int tattrset(int);
-- 
2.19.1

