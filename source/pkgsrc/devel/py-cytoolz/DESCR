Cython implementation of the toolz package, which provides high performance
utility functions for iterables, functions, and dictionaries

toolz is a pure Python package that borrows heavily from contemporary functional
languages. It is designed to interoperate seamlessly with other libraries
including itertools, functools, and third party libraries. High performance
functional data analysis is possible with builtin types like list and dict, and
user-defined data structures; and low memory usage is achieved by using the
iterator protocol and returning iterators whenever possible.

cytoolz implements the same API as toolz. The main differences are that cytoolz
is faster (typically 2-5x faster with a few spectactular exceptions) and cytoolz
offers a C API that is accessible to other projects developed in Cython. Since
toolz is able to process very large (potentially infinite) data sets, the
performance increase gained by using cytoolz can be significant
